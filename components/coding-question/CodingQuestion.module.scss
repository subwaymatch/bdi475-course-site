@use 'sass:color';
@import "styles/variables";
@import "styles/mixins";

.codingQuestionWrapper {
  border-top: 1px solid $color-border-gray;

  .questionTextWrapper {
    overflow-y: auto;

    pre {
      color: $color-purple;
      line-height: 1.6;
      background: color.scale($color-purple, $lightness: 90%);
      margin-top: 0.5rem;
      padding: 0.5rem 0.8rem;
    }

    .questionTextInner {
      padding: 1rem 2rem 2rem 0;

      @include media-breakpoint-down(sm) {
        padding-top: 1.5rem;
      }

      .textMarkdown {
        margin-top: 0.5rem;

        p,
        ul,
        ol {
          margin-top: 0.75rem;
        }

        @include media-breakpoint-down(lg) {
          font-size: 1.15rem;
        }

        @include media-breakpoint-down(md) {
          font-size: 1.05rem;
          letter-spacing: -0.02rem;
        }
      }
    }
  }

  .codeEditorWrapper {
    border-left: 1px solid $color-border-gray;
    border-right: 1px solid $color-border-gray;

    @include media-breakpoint-down(sm) {
      border: none;
      border: 1px solid $color-border-gray;
    }
  }

  @include media-breakpoint-up(md) {
    .outputCol {
      // Force equal height to output columns
      flex: 1;
    }
  }

  .resultsWrapper,
  .errorWrapper {
    border-top: 1px solid $color-border-gray;

    &.hasOutput {
      pre {
        color: #555;
      }
    }

    pre {
      color: #ccc;
      font-family: $font-monospace;
      font-size: 1.15rem;
      line-height: 1.6;
      margin-top: 0.75rem;
      padding-bottom: 1rem;
      white-space: pre;

      @include media-breakpoint-down(lg) {
        font-size: 1.1rem;
      }

      @include media-breakpoint-down(md) {
        font-size: 1rem;
      }
    }
  }

  .resultsWrapper {
    padding: 0.75rem 2rem 0 0;
  }

  .errorWrapper {
    border-left: 1px solid $color-border-gray;
    padding: 0.75rem 0 0 1rem;
    overflow: auto;
  }

  @include media-breakpoint-down(sm) {
    .resultsWrapper,
    .errorWrapper {
      padding: 1rem 0;
      border: none;
    }

    .errorWrapper {
      border-top: 1px solid $color-border-gray;
    }
  }

  .controlsWrapper {
    border-top: 1px solid $color-border-gray;
    border-bottom: 1px solid $color-border-gray;

    .button {
      display: inline-flex;
      align-items: center;
      padding: 1rem 0;
      cursor: pointer;
      transition: all 0.3s;
      font-size: 1.1rem;

      &.disabled {
        cursor: not-allowed;
        color: #aaa;
      }

      &.solution {
        display: none;
      }

      .reactIcon {
        font-size: 1rem;
      }

      .label {
        margin-left: 0.5rem;
      }

      &:hover {
        transform: translateY(2px);
      }
    }

    .leftControls,
    .rightControls {
      display: flex;
    }

    .leftControls {
      .button {
        margin-left: 2.5rem;

        &:first-child {
          margin-left: 0;
        }
      }
    }

    .rightControls {
      justify-content: flex-end;

      .button {
        margin-right: 2.5rem;

        &:last-child {
          margin-right: 0;
          padding-right: 1.5rem;
        }
      }
    }
  }
}
